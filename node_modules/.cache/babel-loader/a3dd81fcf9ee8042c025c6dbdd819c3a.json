{"ast":null,"code":"export const todoReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'add':\n      return [...state, action.payload];\n\n    case 'delete':\n      return state.filter(todo => todo.id !== action.payload);\n\n    case 'toggle':\n      return state.map(todo => todo.id === action.payload ? { ...todo,\n        done: !todo.done\n      } : todo);\n\n    case 'toggle-old':\n      return state.map(todo => {\n        if (todo.id === action.payload) {\n          return { ...todo,\n            done: !todo.done\n          };\n        } else {\n          return todo;\n        }\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/nahueldesimone/Documents/Repos/React-HooksGenerales/src/components/08-useReducer/todoReducer.js"],"names":["todoReducer","state","action","type","payload","filter","todo","id","map","done"],"mappings":"AACA,OAAO,MAAMA,WAAW,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAE/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,KAAL;AACI,aAAO,CAAC,GAAGF,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AAEJ,SAAK,QAAL;AACI,aAAOH,KAAK,CAACI,MAAN,CAAaC,IAAI,IACpBA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OADhB,CAAP;;AAIJ,SAAK,QAAL;AACI,aAAOH,KAAK,CAACO,GAAN,CAAWF,IAAI,IACjBA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAApB,GACE,EAAC,GAAGE,IAAJ;AAAUG,QAAAA,IAAI,EAAE,CAACH,IAAI,CAACG;AAAtB,OADF,GAEEH,IAHC,CAAP;;AAQJ,SAAK,YAAL;AACI,aAAOL,KAAK,CAACO,GAAN,CAAWF,IAAI,IAAI;AAEtB,YAAIA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACE,OAAvB,EAA+B;AAC3B,iBAAO,EACH,GAAGE,IADA;AAEHG,YAAAA,IAAI,EAAE,CAACH,IAAI,CAACG;AAFT,WAAP;AAIH,SALD,MAMI;AACA,iBAAOH,IAAP;AACH;AACJ,OAXM,CAAP;;AAaJ;AACI,aAAOL,KAAP;AAjCR;AAoCH,CAtCM","sourcesContent":["\nexport const todoReducer = (state = [], action) => {\n\n    switch (action.type) {\n        case 'add':\n            return [...state, action.payload]\n        \n        case 'delete':\n            return state.filter(todo => \n                todo.id !== action.payload\n            );\n\n        case 'toggle':\n            return state.map( todo => \n                (todo.id === action.payload)\n                ? {...todo, done: !todo.done}\n                : todo\n            \n            )\n\n\n        case 'toggle-old':\n            return state.map( todo => {\n\n                if (todo.id === action.payload){\n                    return {\n                        ...todo,\n                        done: !todo.done\n                    }\n                }\n                else{\n                    return todo\n                }\n            })\n    \n        default:\n            return state;\n    }\n\n}"]},"metadata":{},"sourceType":"module"}