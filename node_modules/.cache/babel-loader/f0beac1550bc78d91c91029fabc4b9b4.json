{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nexport const useFetch = url => {\n  _s();\n\n  const [state, setState] = useState({\n    data: null,\n    loading: true,\n    error: null\n  });\n  useEffect(() => {\n    setState({ ...state,\n      loading: true\n    });\n    fetch(url);\n    setTimeout(() => {\n      setState({ ...state,\n        loading: false,\n        error: null,\n        data: data\n      });\n    }).then(resp => resp.json()).then(data => {});\n  }, [url]);\n  return state;\n};\n\n_s(useFetch, \"QInjk+e0bGm5LkdD7dYbCHBOIBY=\");","map":{"version":3,"sources":["/Users/nahueldesimone/Documents/Repos/React-HooksGenerales/src/hooks/useFetch.js"],"names":["useEffect","useState","useFetch","url","state","setState","data","loading","error","fetch","setTimeout","then","resp","json"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AAG7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC;AAACK,IAAAA,IAAI,EAAE,IAAP;AAAaC,IAAAA,OAAO,EAAE,IAAtB;AAA4BC,IAAAA,KAAK,EAAE;AAAnC,GAAD,CAAlC;AAEAR,EAAAA,SAAS,CAAC,MAAM;AAEZK,IAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELG,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAKAE,IAAAA,KAAK,CAACN,GAAD,CAAL;AACAO,IAAAA,UAAU,CAAE,MAAM;AACdL,MAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELG,QAAAA,OAAO,EAAE,KAFJ;AAGLC,QAAAA,KAAK,EAAE,IAHF;AAILF,QAAAA,IAAI,EAAEA;AAJD,OAAD,CAAR;AAMH,KAPS,CAAV,CAQKK,IARL,CAQUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EARlB,EASKF,IATL,CASWL,IAAI,IAAI,CAEd,CAXL;AAYH,GApBQ,EAoBN,CAACH,GAAD,CApBM,CAAT;AAuBA,SAAOC,KAAP;AACH,CA7BM;;GAAMF,Q","sourcesContent":["import { useEffect, useState } from \"react\"\n\nexport const useFetch = (url) => {\n  \n\n    const [state, setState] = useState({data: null, loading: true, error: null});\n\n    useEffect(() => {\n\n        setState({\n            ...state,\n            loading: true\n        })\n      \n        fetch(url)\n        setTimeout( () => {\n            setState({\n                ...state,\n                loading: false,\n                error: null,\n                data: data\n            })\n        })\n            .then(resp => resp.json())\n            .then( data => {\n\n            })\n    }, [url])\n    \n\n    return state;\n}\n"]},"metadata":{},"sourceType":"module"}