{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nexport const useFetch = url => {\n  _s();\n\n  const estaMontado = useRef(true);\n  const [state, setState] = useState({\n    data: null,\n    loading: true,\n    error: null\n  });\n  useEffect(() => {\n    return () => {\n      estaMontado.current = false;\n    };\n  }, []);\n  useEffect(() => {\n    setState({ ...state,\n      loading: true\n    });\n    fetch(url).then(resp => resp.json()).then(data => {\n      if (estaMontado.current == true) {\n        setTimeout(() => {\n          setState({ ...state,\n            loading: false,\n            error: null,\n            data\n          });\n        }, 4000);\n      } else {\n        console.log(\"SetState no se llamo\");\n      }\n    });\n  }, [url]);\n  return state;\n};\n\n_s(useFetch, \"ouA4Pthhfq1oshYKQCRmEQBo+bc=\");","map":{"version":3,"sources":["/Users/nahueldesimone/Documents/Repos/React-HooksGenerales/src/hooks/useFetch.js"],"names":["useEffect","useRef","useState","useFetch","url","estaMontado","state","setState","data","loading","error","current","fetch","then","resp","json","setTimeout","console","log"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,OAAO,MAAMC,QAAQ,GAAIC,GAAD,IAAS;AAAA;;AAE7B,QAAMC,WAAW,GAAGJ,MAAM,CAAC,IAAD,CAA1B;AAEA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;AAAEM,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,OAAO,EAAE,IAAvB;AAA6BC,IAAAA,KAAK,EAAE;AAApC,GAAD,CAAlC;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACZ,WAAO,MAAM;AACTK,MAAAA,WAAW,CAACM,OAAZ,GAAsB,KAAtB;AACH,KAFD;AAGH,GAJQ,EAIN,EAJM,CAAT;AAOAX,EAAAA,SAAS,CAAC,MAAM;AAEZO,IAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELG,MAAAA,OAAO,EAAE;AAFJ,KAAD,CAAR;AAKAG,IAAAA,KAAK,CAACR,GAAD,CAAL,CACKS,IADL,CACUC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADlB,EAEKF,IAFL,CAEUL,IAAI,IAAI;AAEV,UAAIH,WAAW,CAACM,OAAZ,IAAuB,IAA3B,EAAiC;AAC7BK,QAAAA,UAAU,CAAC,MAAM;AACbT,UAAAA,QAAQ,CAAC,EACL,GAAGD,KADE;AAELG,YAAAA,OAAO,EAAE,KAFJ;AAGLC,YAAAA,KAAK,EAAE,IAHF;AAILF,YAAAA;AAJK,WAAD,CAAR;AAMH,SAPS,EAOP,IAPO,CAAV;AAQH,OATD,MAUI;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;AACJ,KAjBL;AAkBH,GAzBQ,EAyBN,CAACd,GAAD,CAzBM,CAAT;AA2BA,SAAOE,KAAP;AACH,CAzCM;;GAAMH,Q","sourcesContent":["import { useEffect, useRef, useState } from \"react\"\n\nexport const useFetch = (url) => {\n\n    const estaMontado = useRef(true);\n\n    const [state, setState] = useState({ data: null, loading: true, error: null });\n\n    useEffect(() => {\n        return () => {\n            estaMontado.current = false;\n        }\n    }, []);\n\n\n    useEffect(() => {\n\n        setState({\n            ...state,\n            loading: true\n        })\n\n        fetch(url)\n            .then(resp => resp.json())\n            .then(data => {\n\n                if (estaMontado.current == true) {\n                    setTimeout(() => {\n                        setState({\n                            ...state,\n                            loading: false,\n                            error: null,\n                            data\n                        })\n                    }, 4000)\n                }\n                else{\n                    console.log(\"SetState no se llamo\");\n                }\n            })\n    }, [url])\n\n    return state;\n}\n"]},"metadata":{},"sourceType":"module"}