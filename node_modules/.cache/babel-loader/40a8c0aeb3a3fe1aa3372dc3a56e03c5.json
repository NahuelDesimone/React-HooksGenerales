{"ast":null,"code":"var _jsxFileName = \"/Users/nahueldesimone/Documents/Repos/React-HooksGenerales/src/components/06-memos/MemoHook.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useCounter } from '../../hooks/useCounter';\nimport '../02-useEffect/effects.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MemoHook = () => {\n  _s();\n\n  const {\n    counter,\n    increment\n  } = useCounter(10);\n  const [show, setShow] = useState(true);\n\n  const procesoPesado = iteraciones => {\n    for (let i = 0; i < iteraciones; i++) {\n      console.log(\"Ahi vamos...\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Counter MemoHook: \", /*#__PURE__*/_jsxDEV(\"small\", {\n        children: counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: increment,\n      children: \"+1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-outline-primary ml-3\",\n      onClick: () => {\n        setShow(!show);\n      },\n      children: [\"Show/Hide: \", JSON.stringify(show)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MemoHook, \"KxROjmD0jVKjh25h37RxEnAvX20=\", false, function () {\n  return [useCounter];\n});\n\n_c = MemoHook;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemoHook\");","map":{"version":3,"sources":["/Users/nahueldesimone/Documents/Repos/React-HooksGenerales/src/components/06-memos/MemoHook.js"],"names":["React","useState","useCounter","MemoHook","counter","increment","show","setShow","procesoPesado","iteraciones","i","console","log","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,wBAA3B;AAGA,OAAO,6BAAP;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAG1B,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAyBH,UAAU,CAAC,EAAD,CAAzC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,IAAD,CAAhC;;AACA,QAAMO,aAAa,GAAIC,WAAD,IAAiB;AACnC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,WAApB,EAAiCC,CAAC,EAAlC,EAAsC;AAClCC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEH;AACJ,GALD;;AAOA,sBACI;AAAA,4BACI;AAAA,oDAAsB;AAAA,kBAAQR;AAAR;AAAA;AAAA;AAAA;AAAA,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AACI,MAAA,SAAS,EAAC,iBADd;AAEI,MAAA,OAAO,EAAEC,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAUI;AACI,MAAA,SAAS,EAAC,8BADd;AAEI,MAAA,OAAO,EAAG,MAAM;AACZE,QAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACH,OAJL;AAAA,gCAOgBO,IAAI,CAACC,SAAL,CAAeR,IAAf,CAPhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAlCM;;GAAMH,Q;UAGsBD,U;;;KAHtBC,Q","sourcesContent":["import React, { useState } from 'react'\nimport { useCounter } from '../../hooks/useCounter';\n\n\nimport '../02-useEffect/effects.css'\n\nexport const MemoHook = () => {\n\n\n    const { counter, increment } = useCounter(10);\n    const [show, setShow] = useState(true);\n    const procesoPesado = (iteraciones) => {\n        for (let i = 0; i < iteraciones; i++) {\n            console.log(\"Ahi vamos...\")\n            \n        }\n    }\n\n    return (\n        <div>\n            <h3>Counter MemoHook: <small>{counter}</small></h3>\n            <hr />\n\n            <button\n                className='btn btn-primary'\n                onClick={increment}>\n                +1\n            </button>\n\n            <button\n                className='btn btn-outline-primary ml-3'\n                onClick={ () => {\n                    setShow(!show)\n                }}\n\n            >\n                Show/Hide: {JSON.stringify(show)}\n            </button>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}